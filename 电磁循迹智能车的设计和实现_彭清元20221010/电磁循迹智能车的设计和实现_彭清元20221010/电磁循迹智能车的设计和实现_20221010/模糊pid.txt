## 5.1 传统PID

普通的PID结构简单、稳定性好、可靠性较强，成为当代控制算法的主流，但是普通的PID控制在非线性的变化中，系统的鲁棒性不强，因此达到预期结果并不理想，传统PID主要是由比例、积分、微分组成，通过比例增大反应速度，通过积分作用消除误差，而微分控制可缩小超调量，三者共同控制，构成一个负反馈调节，流程如图5.1所示。

![img](file:///C:\Users\lenovo\AppData\Local\Temp\ksohtml18260\wps1.png) 

​	图 5.1 PID控制过程流程

## 5.2模糊PID控制

基于传统PID的鲁棒性不强，于是在原来的基础上引入模糊控制，模糊控制在当下实际应用中已经十分常用，如家用空调、智能洗衣机、吸尘器等。模糊控制是基于智能推理算法，逐步求精的思想，一个完整的模糊算法主要是由模糊化、模糊推理机、清晰化三个方面构成的[6]。

5.2.1 输入量的量化

输入量的量化就是将输入量通过量化函数进行映射成一定的数字级别，一般而言都是相对0的对称区间。首先引入e和ec模糊集对应的论域，定义{-6，-5，-4，-3，-2，-1，0，1，2，3，4，5，6}。对于任何一个输入量都会有一个范围，预先标记为![img](file:///C:\Users\lenovo\AppData\Local\Temp\ksohtml18260\wps2.jpg)和![img](file:///C:\Users\lenovo\AppData\Local\Temp\ksohtml18260\wps3.jpg)，在进行PID进行调节的时候设定值的范围的预期一致。此处的量化采用线性函数进行处理：

![img](file:///C:\Users\lenovo\AppData\Local\Temp\ksohtml18260\wps4.jpg) 

![img](file:///C:\Users\lenovo\AppData\Local\Temp\ksohtml18260\wps5.jpg) 

5.2.2 输入量的模糊化

当收集了e和ec的模糊子集，对于区间的范围规定为：负大[NB]、负中[NM]、负小[NS]、零[ZO]、正小[PS]、正中[PM]、正大[PB]等七个变量进行描述模糊范围，所以定义e和ec的模糊子集位：{NB，NM，NS，ZO，PS，PM，PB}。正常的隶属度是在0-1之间的一个值，通过这个值来描述变量的模糊程度，在这里采用线性的隶属度函数，如图5.2所示：

![img](file:///C:\Users\lenovo\AppData\Local\Temp\ksohtml18260\wps6.png) 

图 5.2 隶属度函数图像

5.2.2 建立模糊化表

在传统PID中，比例的取值取决于响应速度，增大比例能够提高反应速度，但是当比例过大的时候会发生超调现象，导致系统震荡严重，为了减小震荡，适当的将比例减小，当比例过小的时候，会导致反应速度过慢。因此设定比例的模糊表的规则：当调节初期因该取较大值，在调节中期取中间值，在调节末期取较小值，最终达到具有较小的超调并且保证了反应速度较快的效果，其中水平表示ec，竖直表示e，具体规则表5-1：

表 5-1 比例模糊规则

| ![img](file:///C:\Users\lenovo\AppData\Local\Temp\ksohtml18260\wps7.jpg) | NB负大 | NM负中 | NS负小 | ZO零   | PS正小 | PM正中 | PB正大 |
| ------------------------------------------------------------ | ------ | ------ | ------ | ------ | ------ | ------ | ------ |
| NB负大                                                       | PB正大 | PB正大 | PM正中 | PM正中 | PS正小 | ZO零   | ZO零   |
| NM负中                                                       | PB正大 | PB正大 | PM正中 | PS正小 | PS正小 | ZO零   | NS负小 |
| NS负小                                                       | PM正中 | PM正中 | PM正中 | PS正小 | ZO零   | NS负小 | NS负小 |
| ZO零                                                         | PM正中 | PM正中 | PS正小 | ZO零   | NS负小 | NM负中 | NM负中 |
| PS正小                                                       | PS正小 | PS正小 | ZO零   | NS负小 | NS负小 | NM负中 | NM负中 |
| PM正中                                                       | PS正小 | ZO零   | NS负小 | NM负中 | NM负中 | NM负中 | NB负大 |
| PB正大                                                       | ZO零   | ZO零   | NM负中 | NM负中 | NM负中 | NB负大 | NB负大 |

在PID调节过程中，积分控制主要是用来消除稳态偏差，在调节过程中可能产生积分饱和，导致在调节过程中发生超调现象，所以在调节初期，为了避免积分过饱和，积分因适当小一点，在调节中期，积分作用适中，在调节末期，因提高积分效果，减小稳态偏差，其中水平表示ec，竖直表示e，具体积分的模糊具体见表5-2：

表 5-2 积分模糊规则

| ![img](file:///C:\Users\lenovo\AppData\Local\Temp\ksohtml18260\wps8.jpg) | NB负大 | NM负中 | NS负小 | ZO零   | PS正小 | PM正中 | PB正大 |
| ------------------------------------------------------------ | ------ | ------ | ------ | ------ | ------ | ------ | ------ |
| NB负大                                                       | NB负大 | NB负大 | NM负中 | NM负中 | NS负小 | ZO零   | ZO零   |
| NM负中                                                       | NB负大 | NB负大 | NM负中 | NS负小 | NS负小 | ZO零   | ZO零   |
| NS负小                                                       | NB负大 | NM负中 | NS负小 | NS负小 | ZO零   | PS正小 | PS正小 |
| ZO零                                                         | NM负中 | NM负中 | NS负小 | ZO零   | PS正小 | PM正中 | PB正大 |
| PS正小                                                       | NM负中 | NS负小 | ZO零   | PS正小 | PS正小 | PM正中 | PB正大 |
| PM正中                                                       | ZO零   | ZO零   | PS正小 | PS正小 | PM正中 | PB正大 | PB正大 |
| PB正大                                                       | ZO零   | ZO零   | PS正小 | PM正中 | PM正中 | PB正大 | PB正大 |

为了减小超调现象，于是引入微分运算，除了在减小超调以外，微分也起到可加快调节的作用，微分的作用是抑制偏差的变化。微分的调节对动态特性影响很大，由于微分过大，调节就会超前，微分过小制动就会落后。因此对于微分的调节，在初期，加大微分的作用，中期适当减小，保持固定，在末期因稍作减小。其中水平表示ec，竖直表示e，具体微分的模糊表见表5-3：

表 5-3 微分模糊规则

| ![img](file:///C:\Users\lenovo\AppData\Local\Temp\ksohtml18260\wps9.jpg) | NB负大 | NM负中 | NS负小 | ZO零   | PS正小 | PM正中 | PB正大 |
| ------------------------------------------------------------ | ------ | ------ | ------ | ------ | ------ | ------ | ------ |
| NB负大                                                       | PS正小 | NS负小 | NB负大 | NB负大 | NB负大 | NM负中 | PS正小 |
| NM负中                                                       | PS正小 | NS负小 | NB负大 | NM负中 | NM负中 | NS负小 | ZO零   |
| NS负小                                                       | ZO零   | NS负小 | NM负中 | NM负中 | NS负小 | NS负小 | ZO零   |
| ZO零                                                         | ZO零   | NS负小 | NS负小 | NS负小 | NS负小 | NS负小 | ZO零   |
| PS正小                                                       | ZO零   | ZO零   | ZO零   | ZO零   | ZO零   | ZO零   | ZO零   |
| PM正中                                                       | PB正大 | NS负小 | PS正小 | PS正小 | PS正小 | PS正小 | PB正大 |
| PB正大                                                       | PB正大 | PM正中 | PM正中 | PM正中 | PS正小 | PS正小 | PB正大 |

5.2.3 清晰化

在实际引用过程中，需要用到的是清晰的比例、积分、微分，因此根据模糊表将模糊之后的数据推理出来得到最终使用的结果。这里采用的是{-6，6}的论域，这里采用重心法计算个输出的量化值。计算公式，其中M是隶属度，F为模糊规则表数值：

![img](file:///C:\Users\lenovo\AppData\Local\Temp\ksohtml18260\wps10.jpg) 

将最终得出的数据带入到PID公式中进行计算，具体流程图5.3如下[7]：

![img](file:///C:\Users\lenovo\AppData\Local\Temp\ksohtml18260\wps11.png) 

 

图 5.3 模糊PID流程

通过引入模糊PID的使用，十分明显的提高了小车运行鲁棒性和稳定性，反应速度一定程度上得到了极大的改良。